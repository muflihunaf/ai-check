# AI Verification Services

This repository hosts a Golang HTTP API that orchestrates verification workflows backed by gRPC services, Redis caching, and PostgreSQL persistence.

## Environment variables

The Golang API reads the following environment variables at runtime:

| Variable | Required | Description |
| --- | --- | --- |
| `DATABASE_DSN` | No | PostgreSQL DSN. Defaults to `host=postgres user=postgres password=postgres dbname=aiverify port=5432 sslmode=disable`. |
| `REDIS_ADDR` | No | Address of the Redis instance (e.g., `redis:6379`). Defaults to `redis:6379`. |
| `IMAGE_PROCESSOR_ADDR` | No | gRPC endpoint for the Rust image processor. Defaults to `rust-service:50051`. |
| `JWT_SECRET` | Yes (for protected endpoints) | Symmetric key used to validate HMAC-signed bearer tokens. A `dev-secret` fallback is used for local testing but should be overridden in production. |
| `JWT_AUDIENCE` | No | Expected JWT audience claim. If set, tokens must include this audience value. |
| `VERIFICATION_CACHE_TTL` | No | Overrides the Redis TTL for cached verification results. Accepts Go duration strings (e.g., `12h`, `36h30m`). Defaults to `24h`. |

The middleware expects bearer tokens containing a `sub` claim, which is propagated to downstream handlers and used to associate verification requests with the authenticated user.

Tenants that require longer or shorter retention can set `VERIFICATION_CACHE_TTL` in their deployment manifests or environment configuration without code changes. When unset or invalid, the service retains cached verification results for 24 hours.

## Protected endpoints

The following HTTP endpoints require a valid JWT bearer token signed with `JWT_SECRET` and, when configured, matching the `JWT_AUDIENCE` value. Unauthorized requests receive `401 Unauthorized` responses.

| Method | Path | Description |
| --- | --- | --- |
| `POST` | `/verify` | Submit an image for verification. |
| `GET` | `/result/:id` | Retrieve a previously computed verification result. |
| `GET` | `/duplicates/:id` | Inspect duplicate verification requests that share the same SHA-1 hash. |
| `GET` | `/metrics/summary` | Return aggregated verification metrics (success rate, average score, processing latency). |
